{"version":3,"sources":["../../../src/utils/logFormatter.ts"],"sourcesContent":["import type { LogEntry } from './debugLogger';\n\n// Move to shared once clerk/shared is used in clerk/nextjs\nconst maskSecretKey = (str: any) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  try {\n    return (str || '').replace(/^(sk_(live|test)_)(.+?)(.{3})$/, '$1*********$4');\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const logFormatter = (entry: LogEntry, i: number) => {\n  return (Array.isArray(entry) ? entry : [entry]).map(entry => {\n    if (typeof entry === 'string') {\n      return { logKey: i, content: maskSecretKey(entry) };\n    }\n\n    const entries = Object.fromEntries(Object.entries(entry).map(([k, v]) => [k, maskSecretKey(v)]));\n    if (!('logKey' in entries)) {\n      entries.logKey = i;\n    }\n\n    return entries;\n  });\n};\n"],"mappings":"AAGA,MAAM,gBAAgB,CAAC,QAAa;AAClC,MAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACnC,WAAO;AAAA,EACT;AAEA,MAAI;AACF,YAAQ,OAAO,IAAI,QAAQ,kCAAkC,eAAe;AAAA,EAC9E,SAAS,GAAG;AACV,WAAO;AAAA,EACT;AACF;AAEO,MAAM,eAAe,CAAC,OAAiB,MAAc;AAC1D,UAAQ,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAAA,WAAS;AAC3D,QAAI,OAAOA,WAAU,UAAU;AAC7B,aAAO,EAAE,QAAQ,GAAG,SAAS,cAAcA,MAAK,EAAE;AAAA,IACpD;AAEA,UAAM,UAAU,OAAO,YAAY,OAAO,QAAQA,MAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AAC/F,QAAI,EAAE,YAAY,UAAU;AAC1B,cAAQ,SAAS;AAAA,IACnB;AAEA,WAAO;AAAA,EACT,CAAC;AACH;","names":["entry"]}